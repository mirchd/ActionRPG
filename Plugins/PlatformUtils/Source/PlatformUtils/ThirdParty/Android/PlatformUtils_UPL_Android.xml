<root xmlns:android="http://schemas.android.com/apk/res/android">
  <init>
	<log text="MobileUtils init"/>
  </init>

  <proguardAdditions>
	<insert>
	</insert>
  </proguardAdditions>

  <resourceCopies>
	<copyDir src="$S(PluginDir)/ThirdParty/Android/Libs"
					dst="$S(BuildDir)" />
  </resourceCopies>
	
  <gameActivityImportAdditions>
	<insert>
	  import android.net.ConnectivityManager;
	  import android.net.NetworkInfo;
	  import com.google.android.gms.common.ConnectionResult;
	  import android.telephony.TelephonyManager;
	  import android.provider.Settings.Secure;
	  import android.net.wifi.WifiManager;
	  import java.security.MessageDigest;
	  import java.security.NoSuchAlgorithmException;
	</insert>
  </gameActivityImportAdditions>

  <androidManifestUpdates>
	  <addPermission android:name="android.permission.READ_PHONE_STATE" />
  </androidManifestUpdates>

  <gameActivityClassAdditions>
	<insert>
	public boolean AndroidThunkJava_HasInternetConnected() 
	{
		ConnectivityManager connectivity = (ConnectivityManager) getSystemService(Context.CONNECTIVITY_SERVICE);
		if (connectivity != null)
		{
			NetworkInfo[] info = connectivity.getAllNetworkInfo();
			if (info != null)
			{
				for (int i = 0; i &lt; info.length; i++)
    {
    if (info[i].getState() == NetworkInfo.State.CONNECTED)
    {
    return true;
    }
    }
    }
    }
    return false;
    }

    public String AndroidThunkJava_GetAndroidDeviceId()
    {
    return Secure.getString(getContentResolver(), Secure.ANDROID_ID);
    }

    public String AndroidThunkJava_GetMacAddress()
    {
    WifiManager wm = (WifiManager)getSystemService(Context.WIFI_SERVICE);
    String MACAddress = wm.getConnectionInfo().getMacAddress();
    return MACAddress;
    }

    public String AndroidThunkJava_GetFakeDeviceID()
    {
    String FakeDeviceID = "35" +
    Build.BOARD.length() % 10+ Build.BRAND.length() % 10 +
    Build.CPU_ABI.length() % 10 + Build.DEVICE.length() % 10 +
    Build.DISPLAY.length() % 10 + Build.HOST.length() % 10 +
    Build.ID.length() % 10 + Build.MANUFACTURER.length() % 10 +
    Build.MODEL.length() % 10 + Build.PRODUCT.length() % 10 +
    Build.TAGS.length() % 10 + Build.TYPE.length() % 10 +
    Build.USER.length() % 10 ;

    return FakeDeviceID;
    }

    public String AndroidThunkJava_GetDeviceId()
    {
    String FakeDeviceID = AndroidThunkJava_GetFakeDeviceID();
    String AndroidID = AndroidThunkJava_GetAndroidDeviceId();
    String MACAddress = AndroidThunkJava_GetMacAddress();

    String LongDeviceID = FakeDeviceID + AndroidID + MACAddress;

    MessageDigest m = null;
    try
    {
    m = MessageDigest.getInstance("MD5");
    }
    catch (NoSuchAlgorithmException e)
    {
    e.printStackTrace();
    }
    m.update(LongDeviceID.getBytes(), 0, LongDeviceID.length());
    byte MD5Data[] = m.digest();

    String UniqueID = new String();
    for (int i = 0; i &lt; MD5Data.length; i++) 
		{
			int b =  (0xFF &amp; MD5Data[i]);
			if (b &lt;= 0xF) 
			{
			  UniqueID += "0";
			}
			UniqueID += Integer.toHexString(b); 
		}

		UniqueID = UniqueID.toUpperCase();
		
		return UniqueID;
	}
	</insert>
  </gameActivityClassAdditions>
</root>